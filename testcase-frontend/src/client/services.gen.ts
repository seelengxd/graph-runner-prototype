// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetAllEdgesApiEdgesGetResponse, CreateEdgeApiEdgesPostData, CreateEdgeApiEdgesPostResponse, DeleteEdgeApiEdgesIdDeleteData, DeleteEdgeApiEdgesIdDeleteResponse, GetAllNodesApiNodesGetResponse, CreateNodeApiNodesPostData, CreateNodeApiNodesPostResponse, GetNodeApiNodesIdGetData, GetNodeApiNodesIdGetResponse, UpdateNodeApiNodesIdPutData, UpdateNodeApiNodesIdPutResponse, DeleteNodeApiNodesIdDeleteData, DeleteNodeApiNodesIdDeleteResponse, GetAllEdgesApiProgramsRunPostResponse } from './types.gen';

/**
 * Get All Edges
 * @returns Edge Successful Response
 * @throws ApiError
 */
export const getAllEdgesApiEdgesGet = (): CancelablePromise<GetAllEdgesApiEdgesGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/edges'
}); };

/**
 * Create Edge
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const createEdgeApiEdgesPost = (data: CreateEdgeApiEdgesPostData): CancelablePromise<CreateEdgeApiEdgesPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/edges',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Delete Edge
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const deleteEdgeApiEdgesIdDelete = (data: DeleteEdgeApiEdgesIdDeleteData): CancelablePromise<DeleteEdgeApiEdgesIdDeleteResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/api/edges/{id}',
    path: {
        id: data.id
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Get All Nodes
 * @returns Node Successful Response
 * @throws ApiError
 */
export const getAllNodesApiNodesGet = (): CancelablePromise<GetAllNodesApiNodesGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/nodes'
}); };

/**
 * Create Node
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const createNodeApiNodesPost = (data: CreateNodeApiNodesPostData): CancelablePromise<CreateNodeApiNodesPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/nodes',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Get Node
 * @param data The data for the request.
 * @param data.id
 * @returns Node Successful Response
 * @throws ApiError
 */
export const getNodeApiNodesIdGet = (data: GetNodeApiNodesIdGetData): CancelablePromise<GetNodeApiNodesIdGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/api/nodes/{id}',
    path: {
        id: data.id
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Update Node
 * @param data The data for the request.
 * @param data.id
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const updateNodeApiNodesIdPut = (data: UpdateNodeApiNodesIdPutData): CancelablePromise<UpdateNodeApiNodesIdPutResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/api/nodes/{id}',
    path: {
        id: data.id
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Delete Node
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const deleteNodeApiNodesIdDelete = (data: DeleteNodeApiNodesIdDeleteData): CancelablePromise<DeleteNodeApiNodesIdDeleteResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/api/nodes/{id}',
    path: {
        id: data.id
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Get All Edges
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getAllEdgesApiProgramsRunPost = (): CancelablePromise<GetAllEdgesApiProgramsRunPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/programs/run'
}); };